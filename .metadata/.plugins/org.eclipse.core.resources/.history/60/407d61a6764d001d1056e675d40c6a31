package br.com.merge.resource;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import javax.ws.rs.core.UriInfo;
import br.com.merge.bo.CandidaturaBo;
import br.com.merge.bo.CurriculoBo;
import br.com.merge.excetion.DadoInvalidoException;
import br.com.merge.excetion.IdNotFoundException;
import br.com.merge.factory.ConnetionFactoy;
import br.com.merge.model.Candidatura;
import br.com.merge.model.Curriculo;

@Path("/curriculo/")
public class CurriculoResource {
	
	private Connection conexao;
	CurriculoBo curriculoBo;
	
	@PUT
	@Path("/{id}")
	@Consumes(MediaType.APPLICATION_JSON)
	public Response atualizar(Curriculo curriculo, @PathParam("id") int id) throws ClassNotFoundException, SQLException, IdNotFoundException {
		cand = new 	CandidaturaBo(conexao = ConnetionFactoy.getConnection());
		candidatura.setCodigo(id);
		cand.atualizar(candidatura);
		

		return Response.ok().build();
	
	}

	@DELETE
	@Path("{id}")
	public void excluir(@PathParam("id") int id) throws ClassNotFoundException, SQLException, IdNotFoundException {
		cand = new 	CandidaturaBo(conexao = ConnetionFactoy.getConnection());

		cand.remover(id);
	}
}
